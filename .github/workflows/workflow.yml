name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:  

# env:
#   AWS_DEFAULT_REGION: us-east-1
#   AWS_DEFAULT_OUTPUT: json
permissions:
  contents: read
  id-token: write
  
jobs:
  run-docker:
    runs-on: ubuntu-latest
    steps:
      # - name: checkout
      #   uses: actions/checkout@v3

      - name: Docker
        uses: nirvanabrz/docker-acation@main
  #     - name: Get Secrets
  #       run: echo "teste"

  #     - name: Configure AWS Credentials
  #       uses: aws-actions/configure-aws-credentials@v2.2.0
  #       with:
  #         aws-region: ${{ env.AWS_DEFAULT_REGION }}
  #         ## the following creates an ARN based on the values entered into github secrets
  #         role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_DEPLOY_ROLE }}
  #         role-session-name: myGitHubActions

  # build:
  #   runs-on: ubuntu-latest    
  #   needs: auth
  #   permissions:
  #     actions: read
  #     checks: read
  #     contents: read
  #     deployments: read
  #     id-token: none
  #     issues: read
  #     discussions: read
  #     packages: read
  #     pages: read
  #     pull-requests: read
  #     repository-projects: read
  #     security-events: read
  #     statuses: read

  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Run a multi-line script
  #       env:
  #         SECRET_STORE_CREDENTIALS: ${{ secrets.SECRET_STORE_CREDENTIALS }}

  #       if: ${{ env.SECRET_STORE_CREDENTIALS == 'ABDCDEF' }} 

  #       run: |
  #         echo Add other actions to build,
  #         echo test, and deploy your project.
  #         echo "${{ env.SECRET_STORE_CREDENTIALS }}"
